/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
.footer-container, .posts-container, .form-container, .about-container, .header-content__container, .header-menu__container {
  max-width: 1340px;
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
}

*,
*::before,
::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-family: "Roboto", sans-serif;
  font-size: 16px;
  overflow-y: scroll;
  letter-spacing: 0.1em;
}

h1 {
  letter-spacing: 0.08em;
  color: #ffffff;
  font-weight: 300;
  font-family: "Roboto Slab", serif;
  text-align: center;
  line-height: 1.2;
}

a {
  text-decoration: none;
  color: #ffffff;
}

.btn {
  width: 250px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding-left: 1em;
  padding-right: 1em;
  letter-spacing: 0.1em;
  -webkit-transition: background-color 0.5s;
  -o-transition: background-color 0.5s;
  transition: background-color 0.5s;
  color: #ffffff;
}
.btn--light {
  border: 2px solid #ffffff;
  background-color: rgba(255, 255, 255, 0.1);
  /*#ffffff*/
}
.btn--primary {
  height: 60px;
  background-color: rgba(45, 54, 81, 0.8);
  /*#2d3651;*/
  border: 2px solid #2d3651;
}
.btn:hover, .btn:focus {
  background-color: #d66926;
}

.header {
  min-height: 100vh;
  background-color: #2d3651;
  background-image: url("../img/img-header.png");
  background-position: 50% 50%;
  background-size: cover;
  position: relative;
  padding: 150px 0;
  display: grid;
  -ms-flex-line-pack: center;
      align-content: center;
}

.header-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0.8;
  background-color: #2d3651;
}

.header-menu {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  right: 0;
}
.header-menu__container {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 20px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.header-logo {
  font-size: 1.5rem;
  letter-spacing: 0.22em;
}
.header-logo__accent {
  border: 3px solid #d53d27;
  display: inline-block;
  padding: 14px 1px 13px 5px;
  margin-right: 4px;
}
.header-logo__link {
  display: block;
  padding: 20px 20px 20px 0;
}
.header-navbar__btn {
  width: 30px;
  height: 22.5px;
  position: relative;
  margin: 20px 0;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
  cursor: pointer;
}
.header-navbar__btn-row {
  display: block;
  position: absolute;
  height: 3px;
  width: 50%;
  background: #ffffff;
  opacity: 1;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
}
.header-navbar__btn-row:nth-child(even) {
  left: 50%;
  border-radius: 0 3px 3px 0;
}
.header-navbar__btn-row:nth-child(odd) {
  left: 0px;
  border-radius: 3px 0 0 3px;
}
.header-navbar__btn-row:nth-child(1), .header-navbar__btn-row:nth-child(2) {
  top: 0px;
}
.header-navbar__btn-row:nth-child(3), .header-navbar__btn-row:nth-child(4) {
  top: 9px;
}
.header-navbar__btn-row:nth-child(5), .header-navbar__btn-row:nth-child(6) {
  top: 18px;
}
.header-navbar__btn.active span:nth-child(1), .header-navbar__btn.active span:nth-child(6) {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}
.header-navbar__btn.active span:nth-child(2), .header-navbar__btn.active span:nth-child(5) {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}
.header-navbar__btn.active span:nth-child(1) {
  left: 2.5px;
  top: 3.5px;
}
.header-navbar__btn.active span:nth-child(2) {
  left: calc(50% - 2.5px);
  top: 3.5px;
}
.header-navbar__btn.active span:nth-child(3) {
  left: -50%;
  opacity: 0;
}
.header-navbar__btn.active span:nth-child(4) {
  left: 100%;
  opacity: 0;
}
.header-navbar__btn.active span:nth-child(5) {
  left: 2.5px;
  top: 14.5px;
}
.header-navbar__btn.active span:nth-child(6) {
  left: calc(50% - 2.5px);
  top: 14.5px;
}
.header-navbar__list {
  margin: 0 -10px 0;
  padding: 0;
  list-style: none;
}
.header-navbar__link {
  display: block;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
  font-size: 1.125rem;
  letter-spacing: 0.1em;
}
.header-navbar__link:hover, .header-navbar__link:focus {
  color: #d66926;
}

.header-content {
  position: relative;
  z-index: 1;
}
.header-content__actions {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  gap: 20px;
}
.skills__container {
  display: grid;
}
.skills__actions {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-top: 20px;
}

.skill-item {
  position: relative;
  overflow: hidden;
}
.skill-item:hover .skill-item__link {
  color: #d66926;
}
.skill-item:hover .skill-item__image {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}
.skill-item:hover .skill-item__overlay {
  opacity: 0.95;
}
.skill-item__title {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  letter-spacing: 0.1em;
}
.skill-item__link {
  padding: 20px;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-transition: color 0.5s;
  -o-transition: color 0.5s;
  transition: color 0.5s;
}
.skill-item__image {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #2d3651;
  background-image: url("../img/img-html.png");
  background-position: center;
  background-size: cover;
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  -o-transition: transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}
.skill-item__overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #2d3651;
  opacity: 0.8;
  -webkit-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
}

.skill-item:nth-of-type(1) {
  grid-area: a1;
}

.skill-item:nth-of-type(2) {
  grid-area: a2;
}

.skill-item:nth-of-type(3) {
  grid-area: a3;
}

.skill-item:nth-of-type(4) {
  grid-area: a4;
}

.skill-item:nth-of-type(5) {
  grid-area: a5;
}

.skill-item:nth-of-type(6) {
  grid-area: a6;
}

.skill-item:nth-of-type(7) {
  grid-area: a7;
}

.skill-item:nth-of-type(8) {
  grid-area: a8;
}

.skill-item:nth-of-type(9) {
  grid-area: a9;
}

.about {
  background-color: #e5e5e5;
  padding-top: 80px;
  padding-bottom: 60px;
}
.about-container {
  display: grid;
}
.about-title {
  letter-spacing: 0.1em;
  color: #2d3651;
  font-size: 40px;
  font-weight: bold;
  margin-top: 0;
  padding-bottom: 20px;
}
.about-text {
  margin-top: -5px;
}
.about-left {
  color: #637588;
  font-size: 1.125rem;
}
.about-right {
  position: relative;
  display: grid;
  -ms-flex-line-pack: center;
      align-content: center;
  justify-items: center;
}
.about-right::before {
  content: "";
  position: absolute;
  margin-right: 130%;
  margin-top: 44%;
  width: 2px;
  height: 200px;
  display: block;
  background-color: rgba(99, 117, 136, 0.1);
}
.about-image {
  max-width: 100%;
  max-height: 480px;
}

.form {
  background-color: #2d3651;
}
.form-container {
  padding: 30px 0px;
  padding-right: 20px;
  padding-left: 20px;
  display: grid;
  gap: 20px;
  grid-template-columns: repeat(3, 1fr);
}
.form-control, .form-btn {
  border: 2px solid transparent;
  padding: 18px;
  width: 100%;
  outline: none;
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
  border-bottom: 2px solid #707070;
  color: #ffffff;
  letter-spacing: 0.15em;
}
.form-control {
  background-color: #384365;
}
.form-control:hover, .form-control:focus {
  border: 2px solid #637588;
  border-bottom: 2px solid #ffffff;
  background-color: #3f4c72;
}
.form-control:focus::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:focus::-moz-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:focus:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:focus::-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:focus::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:hover::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:hover::-moz-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:hover:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:hover::-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-control:hover::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.form-btn {
  background-color: #3f4c72;
  border: 2px solid transparent;
  border-bottom: 2px solid #707070;
  cursor: pointer;
}
.form-btn:hover, .form-btn:focus {
  border: 2px solid #e5e5e5;
  color: #e5e5e5;
  background-color: #d66926;
}

.posts {
  padding: 30px;
}

.posts-container__title {
  color: #2d3651;
  font-size: 40px;
  letter-spacing: 0.2rem;
  margin-bottom: 60px;
}

.posts-home {
  display: grid;
  grid-template-areas: "p1 p1 p2 p3" "p4 p5 p6 p6";
  gap: 20px;
}

.posts-item {
  background-color: #eeeeee;
}
.posts-item:hover {
  background-color: #e5e5e5;
}
.posts-item:hover .posts-item__img {
  -webkit-transform: scale(1.05) translateY(-6.5px);
      -ms-transform: scale(1.05) translateY(-6.5px);
          transform: scale(1.05) translateY(-6.5px);
}
.posts-item:hover .posts-item__title {
  color: #44596e;
}

.posts-item__link {
  display: grid;
  grid-template-rows: 300px 1fr;
  height: 100%;
  overflow: hidden;
}

.posts-item__img {
  display: grid;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 270px;
  background-size: cover;
  background-position: center;
  -webkit-transition: -webkit-transform 0.5s ease;
  transition: -webkit-transform 0.5s ease;
  -o-transition: transform 0.5s ease;
  transition: transform 0.5s ease;
  transition: transform 0.5s ease, -webkit-transform 0.5s ease;
}

.posts-item__content {
  display: grid;
  padding: 20px;
  text-align: center;
  -ms-flex-line-pack: center;
      align-content: center;
}

.posts-item__title {
  color: #637588;
  font-size: 18px;
  line-height: 1.3;
  margin: 0;
  -webkit-transition: color 0.25s ease;
  -o-transition: color 0.25s ease;
  transition: color 0.25s ease;
}

.posts-text {
  margin-top: 20px;
  color: #637588;
  font-size: 16px;
}

.posts-item:nth-of-type(1) {
  grid-area: p1;
}

.posts-item:nth-of-type(2) {
  grid-area: p2;
}

.posts-item:nth-of-type(3) {
  grid-area: p3;
}

.posts-item:nth-of-type(4) {
  grid-area: p4;
}

.posts-item:nth-of-type(5) {
  grid-area: p5;
}

.posts-item:nth-of-type(6) {
  grid-area: p6;
}

.footer {
  margin-top: 40px;
  text-align: center;
  padding: 70px 20px 80px;
  background-color: #2d3651;
}
.footer-icon {
  position: relative;
  margin-bottom: 20px;
}
.footer-icon::after {
  content: "";
  position: absolute;
  display: block;
  width: 75px;
  height: 2px;
  left: calc(50% - 37.5px);
  background-color: rgba(99, 117, 136, 0.5);
}
.footer-logo {
  text-align: center;
  color: #637588;
  font-weight: 100;
  font-size: 1rem;
  letter-spacing: 0.3em;
}
.footer-logo__span {
  letter-spacing: 0.05em;
  color: #ffffff;
  font-size: 1rem;
  font-weight: bold;
  display: block;
}
.footer .fab {
  padding-right: 6px;
  padding-left: 6px;
  padding-bottom: 25px;
  font-size: 2.25rem;
}
.footer .fab:hover, .footer .fab:focus {
  color: #d66926;
}
@media (min-width: 576px) {
  .btn--primary {
    width: 350px;
  }
  .skills {
    padding: 10px;
  }
  .skills__actions {
    margin-bottom: 30px;
  }
}
@media (min-height: 691px) {
  .skill-item {
    min-height: calc(33.3333vh - 13.3333px);
  }
}
@media (min-width: 768px) {
  .header-navbar__btn {
    display: none;
  }
  .header-navbar__list {
    display: grid;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: end;
    grid-template-columns: repeat(auto-fit, minmax(2em, -webkit-max-content));
    grid-template-columns: repeat(auto-fit, minmax(2em, max-content));
    gap: 20px;
    margin: 0 -10px 0;
    padding: 0;
    list-style: none;
  }
  .header-navbar__link {
    padding: 20px 10px;
  }
  .skill-item__title {
    font-size: 1.25rem;
  }
}
@media (min-width: 992px) {
  h1 {
    font-size: 3.75rem;
  }
  .btn {
    font-size: 1.125rem;
  }
  .btn--light {
    width: 250px;
    height: 60px;
  }
  .header-content__title {
    margin: 0 0 53px;
  }
  .skills__container {
    grid-template-areas: "a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
    gap: 10px;
  }
  .about-container {
    grid-template-columns: 1fr 271px;
    gap: 100px;
  }
}
@media (max-width: 991.8px) {
  .btn--light {
    width: 170px;
    height: 40px;
  }
  .about-title {
    font-size: 2rem;
  }
  .about-text {
    font-size: 1rem;
  }
}
@media (max-width: 991.8px) and (min-width: 768px) {
  h1 {
    font-size: 2.5rem;
  }
  .btn--light {
    width: 200px;
    height: 50px;
  }
  .header-content__title {
    margin: 0 0 43px;
  }
  .skills__container {
    grid-template-areas: "a1 a1 a2" "a3 a4 a4" "a5 a5 a6" "a7 a8 a6" "a7 a9 a9";
    gap: 10px;
  }
  .about-container {
    grid-template-columns: 1fr 271px;
    gap: 40px;
  }
  .posts-container__title {
    font-size: 32px;
  }
  .posts-home {
    grid-template-areas: "p1 p1 p2" "p3 p4 p4" "p5 p5 p6";
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (max-width: 767.8px) {
  h1 {
    font-size: 1.875rem;
  }
  .header-menu {
    background-color: rgba(68, 89, 110, 0.25);
    -webkit-box-shadow: -3px 3px 20px -10px black;
            box-shadow: -3px 3px 20px -10px black;
  }
  .header-navbar {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }
  .header-navbar__list {
    margin: 0;
    padding: 0;
    list-style: none;
    display: none;
    background-color: rgba(68, 89, 110, 0.9);
    text-align: right;
    position: absolute;
    top: 100%;
    right: 20px;
    -webkit-box-shadow: -3px 3px 20px -10px black;
            box-shadow: -3px 3px 20px -10px black;
  }
  .header-navbar__item {
    margin: 20px 10px;
  }
  .header-navbar__link {
    padding: 10px 20px;
  }
  .header-content__title {
    margin: 0 0 33px;
  }
  .skill-item__title {
    font-size: 1.125rem;
  }
  .about-title {
    display: grid;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    justify-items: center;
    font-size: 1.5rem;
  }
}
@media (max-width: 767.8px) and (min-width: 576px) {
  .skills__container {
    grid-template-areas: "a1 a2" "a3 a2" "a4 a4" "a5 a6" "a5 a7" "a8 a9";
    gap: 10px;
  }
  .about-container {
    grid-template-columns: 1fr 236px;
    gap: 20px;
  }
  .form-container {
    grid-template-columns: repeat(2, 1fr);
  }
  .form-section:nth-of-type(1) {
    grid-column: 1/span 2;
  }
  .posts-container__title {
    font-size: 24px;
  }
  .posts-home {
    grid-template-areas: "p1 p2" "p3 p4" "p5 p6";
    grid-template-columns: 1fr 1fr;
  }
}
@media (max-height: 690px) {
  .skill-item {
    min-height: 216.6667px;
  }
}
@media (max-width: 575.8px) {
  .btn--primary {
    width: 100%;
  }
  .header-content__actions {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
  .skills {
    padding: 20px;
  }
  .skills__container {
    grid-template-areas: "a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8" "a9";
    gap: 20px;
  }
  .about-container {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  .about-left {
    border: none;
  }
  .form-section:nth-of-type(1) {
    grid-column: 1/span 3;
  }
  .form-section:nth-of-type(2) {
    grid-column: 1/span 3;
  }
  .form-section:nth-of-type(3) {
    grid-column: 1/span 3;
  }
  .posts-container__title {
    font-size: 24px;
    text-align: center;
  }
  .posts-home {
    grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
    grid-template-columns: 1fr;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYnMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsIm1peGlucy9fbWl4aW5zLW1lZGlhLnNjc3MiLCJtaXhpbnMvX2V4dGVuZHMuc2NzcyIsInByZXNldHMvX3ZhcmlhYmxlcy5zY3NzIiwiY29tbW9uL190eXBvZ3JhcGh5LnNjc3MiLCJwcmVzZXRzL19za2luLnNjc3MiLCJjb21tb24vX2NsYXNzZXMuc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19oZWFkZXIuc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19oZWFkZXItb3ZlcmxheS5zY3NzIiwiY29tcG9uZW50cy9oZWFkZXIvX2hlYWRlci1tZW51LnNjc3MiLCJjb21wb25lbnRzL2hlYWRlci9faGVhZGVyLWxvZ28uc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19oZWFkZXItbmF2YmFyLnNjc3MiLCJtaXhpbnMvX21peGlucy5zY3NzIiwiY29tcG9uZW50cy9oZWFkZXIvX2hlYWRlci1jb250ZW50LnNjc3MiLCJjb21wb25lbnRzL3NlY3Rpb25zL3NraWxscy9fc2tpbGxzLnNjc3MiLCJjb21wb25lbnRzL3NlY3Rpb25zL3NraWxscy9fc2tpbGwtaXRlbS5zY3NzIiwiY29tcG9uZW50cy9zZWN0aW9ucy9fc2VjdGlvbi1hYm91dC5zY3NzIiwiY29tcG9uZW50cy9zZWN0aW9ucy9fc2VjdGlvbi1mb3JtLnNjc3MiLCJjb21wb25lbnRzL3NlY3Rpb25zL19zZWN0aW9uLXBvc3RzLnNjc3MiLCJjb21wb25lbnRzL2Zvb3Rlci9fZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQUE7QUFFQTsrRUFBQTtBQUdBOzs7RUFBQTtBQUtBO0VBQ0UsaUJBQUE7RUFBbUIsTUFBQTtFQUNuQiw4QkFBQTtFQUFnQyxNQUFBO0FDQWxDOztBREdBOytFQUFBO0FBR0E7O0VBQUE7QUFJQTtFQUNFLFNBQUE7QUNGRjs7QURLQTs7RUFBQTtBQUlBO0VB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OXJCQztJQWdCTSwwQkFBQTtJQUNBLFNiWkg7RUhtMUJKO0VnQjN5QkM7SUFJTSxZQUFBO0VoQjgwQlA7RWlCMzJCTztJQUNHLHFCQUFBO0VqQnk1QlY7RWlCcjVCTztJQUNHLHFCQUFBO0VqQnk1QlY7RWlCcjVCTztJQUNHLHFCQUFBO0VqQnk1QlY7RWtCdjdCQztJQVlNLGVBQUE7SUFDQSxrQkFBQTtFbEJ3K0JQO0VrQnArQkY7SUFjTSxrREFBQTtJQUNBLDBCQUFBO0VsQjYrQko7QUFwbEJGIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1idXR0b25dLFxuW3R5cGU9cmVzZXRdLFxuW3R5cGU9c3VibWl0XSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPWJ1dHRvbl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9YnV0dG9uXTotbW96LWZvY3VzcmluZyxcblt0eXBlPXJlc2V0XTotbW96LWZvY3VzcmluZyxcblt0eXBlPXN1Ym1pdF06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1jaGVja2JveF0sXG5bdHlwZT1yYWRpb10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIHVsICovXG4vKiB4bCAqL1xuLyogbGcgKi9cbi8qIG1kICovXG4vKiBzbSAqL1xuLyogeHMgKi9cbi8qIHh4ICovXG4uZm9vdGVyLWNvbnRhaW5lciwgLnBvc3RzLWNvbnRhaW5lciwgLmZvcm0tY29udGFpbmVyLCAuYWJvdXQtY29udGFpbmVyLCAuaGVhZGVyLWNvbnRlbnRfX2NvbnRhaW5lciwgLmhlYWRlci1tZW51X19jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEzNDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cblxuKixcbio6OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG59XG5cbmgxIHtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDhlbTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90byBTbGFiXCIsIHNlcmlmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogMy43NXJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MS44cHgpIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICBoMSB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOHB4KSB7XG4gIGgxIHtcbiAgICBmb250LXNpemU6IDEuODc1cmVtO1xuICB9XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uYnRuIHtcbiAgd2lkdGg6IDI1MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG4gIHBhZGRpbmctcmlnaHQ6IDFlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuNXM7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5idG4ge1xuICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIH1cbn1cbi5idG4tLWxpZ2h0IHtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZmZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICAvKiNmZmZmZmYqL1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5idG4tLWxpZ2h0IHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5idG4tLWxpZ2h0IHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkge1xuICAuYnRuLS1saWdodCB7XG4gICAgd2lkdGg6IDE3MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxufVxuLmJ0bi0tcHJpbWFyeSB7XG4gIGhlaWdodDogNjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NSwgNTQsIDgxLCAwLjgpO1xuICAvKiMyZDM2NTE7Ki9cbiAgYm9yZGVyOiAycHggc29saWQgIzJkMzY1MTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuYnRuLS1wcmltYXJ5IHtcbiAgICB3aWR0aDogMzUwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOHB4KSB7XG4gIC5idG4tLXByaW1hcnkge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4uYnRuOmhvdmVyLCAuYnRuOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q2NjkyNjtcbn1cblxuLmhlYWRlciB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzNjUxO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaW1nLWhlYWRlci5wbmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMTUwcHggMDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xufVxuXG4uaGVhZGVyLW92ZXJsYXkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgb3BhY2l0eTogMC44O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzNjUxO1xufVxuXG4uaGVhZGVyLW1lbnUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDI7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3LjhweCkge1xuICAuaGVhZGVyLW1lbnUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjgsIDg5LCAxMTAsIDAuMjUpO1xuICAgIGJveC1zaGFkb3c6IC0zcHggM3B4IDIwcHggLTEwcHggYmxhY2s7XG4gIH1cbn1cbi5oZWFkZXItbWVudV9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ2FwOiAyMHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyLWxvZ28ge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMjJlbTtcbn1cbi5oZWFkZXItbG9nb19fYWNjZW50IHtcbiAgYm9yZGVyOiAzcHggc29saWQgI2Q1M2QyNztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAxNHB4IDFweCAxM3B4IDVweDtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG59XG4uaGVhZGVyLWxvZ29fX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMjBweCAyMHB4IDIwcHggMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny44cHgpIHtcbiAgLmhlYWRlci1uYXZiYXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgfVxufVxuLmhlYWRlci1uYXZiYXJfX2J0biB7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDIyLjVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDIwcHggMDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbi1vdXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyLW5hdmJhcl9fYnRuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uaGVhZGVyLW5hdmJhcl9fYnRuLXJvdyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogM3B4O1xuICB3aWR0aDogNTAlO1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgdHJhbnNpdGlvbjogMC4yNXMgZWFzZS1pbi1vdXQ7XG59XG4uaGVhZGVyLW5hdmJhcl9fYnRuLXJvdzpudGgtY2hpbGQoZXZlbikge1xuICBsZWZ0OiA1MCU7XG4gIGJvcmRlci1yYWRpdXM6IDAgM3B4IDNweCAwO1xufVxuLmhlYWRlci1uYXZiYXJfX2J0bi1yb3c6bnRoLWNoaWxkKG9kZCkge1xuICBsZWZ0OiAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweCAwIDAgM3B4O1xufVxuLmhlYWRlci1uYXZiYXJfX2J0bi1yb3c6bnRoLWNoaWxkKDEpLCAuaGVhZGVyLW5hdmJhcl9fYnRuLXJvdzpudGgtY2hpbGQoMikge1xuICB0b3A6IDBweDtcbn1cbi5oZWFkZXItbmF2YmFyX19idG4tcm93Om50aC1jaGlsZCgzKSwgLmhlYWRlci1uYXZiYXJfX2J0bi1yb3c6bnRoLWNoaWxkKDQpIHtcbiAgdG9wOiA5cHg7XG59XG4uaGVhZGVyLW5hdmJhcl9fYnRuLXJvdzpudGgtY2hpbGQoNSksIC5oZWFkZXItbmF2YmFyX19idG4tcm93Om50aC1jaGlsZCg2KSB7XG4gIHRvcDogMThweDtcbn1cbi5oZWFkZXItbmF2YmFyX19idG4uYWN0aXZlIHNwYW46bnRoLWNoaWxkKDEpLCAuaGVhZGVyLW5hdmJhcl9fYnRuLmFjdGl2ZSBzcGFuOm50aC1jaGlsZCg2KSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cbi5oZWFkZXItbmF2YmFyX19idG4uYWN0aXZlIHNwYW46bnRoLWNoaWxkKDIpLCAuaGVhZGVyLW5hdmJhcl9fYnRuLmFjdGl2ZSBzcGFuOm50aC1jaGlsZCg1KSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG59XG4uaGVhZGVyLW5hdmJhcl9fYnRuLmFjdGl2ZSBzcGFuOm50aC1jaGlsZCgxKSB7XG4gIGxlZnQ6IDIuNXB4O1xuICB0b3A6IDMuNXB4O1xufVxuLmhlYWRlci1uYXZiYXJfX2J0bi5hY3RpdmUgc3BhbjpudGgtY2hpbGQoMikge1xuICBsZWZ0OiBjYWxjKDUwJSAtIDIuNXB4KTtcbiAgdG9wOiAzLjVweDtcbn1cbi5oZWFkZXItbmF2YmFyX19idG4uYWN0aXZlIHNwYW46bnRoLWNoaWxkKDMpIHtcbiAgbGVmdDogLTUwJTtcbiAgb3BhY2l0eTogMDtcbn1cbi5oZWFkZXItbmF2YmFyX19idG4uYWN0aXZlIHNwYW46bnRoLWNoaWxkKDQpIHtcbiAgbGVmdDogMTAwJTtcbiAgb3BhY2l0eTogMDtcbn1cbi5oZWFkZXItbmF2YmFyX19idG4uYWN0aXZlIHNwYW46bnRoLWNoaWxkKDUpIHtcbiAgbGVmdDogMi41cHg7XG4gIHRvcDogMTQuNXB4O1xufVxuLmhlYWRlci1uYXZiYXJfX2J0bi5hY3RpdmUgc3BhbjpudGgtY2hpbGQoNikge1xuICBsZWZ0OiBjYWxjKDUwJSAtIDIuNXB4KTtcbiAgdG9wOiAxNC41cHg7XG59XG4uaGVhZGVyLW5hdmJhcl9fbGlzdCB7XG4gIG1hcmdpbjogMCAtMTBweCAwO1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXItbmF2YmFyX19saXN0IHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGp1c3RpZnktY29udGVudDogZW5kO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMmVtLCBtYXgtY29udGVudCkpO1xuICAgIGdhcDogMjBweDtcbiAgICBtYXJnaW46IDAgLTEwcHggMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOHB4KSB7XG4gIC5oZWFkZXItbmF2YmFyX19saXN0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OCwgODksIDExMCwgMC45KTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIGJveC1zaGFkb3c6IC0zcHggM3B4IDIwcHggLTEwcHggYmxhY2s7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOHB4KSB7XG4gIC5oZWFkZXItbmF2YmFyX19pdGVtIHtcbiAgICBtYXJnaW46IDIwcHggMTBweDtcbiAgfVxufVxuLmhlYWRlci1uYXZiYXJfX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdHJhbnNpdGlvbjogY29sb3IgMC41cztcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXItbmF2YmFyX19saW5rIHtcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOHB4KSB7XG4gIC5oZWFkZXItbmF2YmFyX19saW5rIHtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gIH1cbn1cbi5oZWFkZXItbmF2YmFyX19saW5rOmhvdmVyLCAuaGVhZGVyLW5hdmJhcl9fbGluazpmb2N1cyB7XG4gIGNvbG9yOiAjZDY2OTI2O1xufVxuXG4uaGVhZGVyLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmhlYWRlci1jb250ZW50X190aXRsZSB7XG4gICAgbWFyZ2luOiAwIDAgNTNweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MS44cHgpIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyLWNvbnRlbnRfX3RpdGxlIHtcbiAgICBtYXJnaW46IDAgMCA0M3B4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3LjhweCkge1xuICAuaGVhZGVyLWNvbnRlbnRfX3RpdGxlIHtcbiAgICBtYXJnaW46IDAgMCAzM3B4O1xuICB9XG59XG4uaGVhZGVyLWNvbnRlbnRfX2FjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZ2FwOiAyMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS44cHgpIHtcbiAgLmhlYWRlci1jb250ZW50X19hY3Rpb25zIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5za2lsbHMge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOHB4KSB7XG4gIC5za2lsbHMge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gIH1cbn1cbi5za2lsbHNfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLnNraWxsc19fY29udGFpbmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImExIGExIGEyIGEzXCIgXCJhNCBhNSBhNSBhNlwiIFwiYTcgYTggYTkgYTZcIjtcbiAgICBnYXA6IDEwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTEuOHB4KSBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNraWxsc19fY29udGFpbmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImExIGExIGEyXCIgXCJhMyBhNCBhNFwiIFwiYTUgYTUgYTZcIiBcImE3IGE4IGE2XCIgXCJhNyBhOSBhOVwiO1xuICAgIGdhcDogMTBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny44cHgpIGFuZCAobWluLXdpZHRoOiA1NzZweCkge1xuICAuc2tpbGxzX19jb250YWluZXIge1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiYTEgYTJcIiBcImEzIGEyXCIgXCJhNCBhNFwiIFwiYTUgYTZcIiBcImE1IGE3XCIgXCJhOCBhOVwiO1xuICAgIGdhcDogMTBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS44cHgpIHtcbiAgLnNraWxsc19fY29udGFpbmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImExXCIgXCJhMlwiIFwiYTNcIiBcImE0XCIgXCJhNVwiIFwiYTZcIiBcImE3XCIgXCJhOFwiIFwiYTlcIjtcbiAgICBnYXA6IDIwcHg7XG4gIH1cbn1cbi5za2lsbHNfX2FjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuc2tpbGxzX19hY3Rpb25zIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG59XG5cbi5za2lsbC1pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuQG1lZGlhIChtaW4taGVpZ2h0OiA2OTFweCkge1xuICAuc2tpbGwtaXRlbSB7XG4gICAgbWluLWhlaWdodDogY2FsYygzMy4zMzMzdmggLSAxMy4zMzMzcHgpO1xuICB9XG59XG5AbWVkaWEgKG1heC1oZWlnaHQ6IDY5MHB4KSB7XG4gIC5za2lsbC1pdGVtIHtcbiAgICBtaW4taGVpZ2h0OiAyMTYuNjY2N3B4O1xuICB9XG59XG4uc2tpbGwtaXRlbTpob3ZlciAuc2tpbGwtaXRlbV9fbGluayB7XG4gIGNvbG9yOiAjZDY2OTI2O1xufVxuLnNraWxsLWl0ZW06aG92ZXIgLnNraWxsLWl0ZW1fX2ltYWdlIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xufVxuLnNraWxsLWl0ZW06aG92ZXIgLnNraWxsLWl0ZW1fX292ZXJsYXkge1xuICBvcGFjaXR5OiAwLjk1O1xufVxuLnNraWxsLWl0ZW1fX3RpdGxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDE7XG4gIG1hcmdpbjogMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5za2lsbC1pdGVtX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3LjhweCkge1xuICAuc2tpbGwtaXRlbV9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIH1cbn1cbi5za2lsbC1pdGVtX19saW5rIHtcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNXM7XG59XG4uc2tpbGwtaXRlbV9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkMzY1MTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2ltZy1odG1sLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcbn1cbi5za2lsbC1pdGVtX19vdmVybGF5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDM2NTE7XG4gIG9wYWNpdHk6IDAuODtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzO1xufVxuXG4uc2tpbGwtaXRlbTpudGgtb2YtdHlwZSgxKSB7XG4gIGdyaWQtYXJlYTogYTE7XG59XG5cbi5za2lsbC1pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgZ3JpZC1hcmVhOiBhMjtcbn1cblxuLnNraWxsLWl0ZW06bnRoLW9mLXR5cGUoMykge1xuICBncmlkLWFyZWE6IGEzO1xufVxuXG4uc2tpbGwtaXRlbTpudGgtb2YtdHlwZSg0KSB7XG4gIGdyaWQtYXJlYTogYTQ7XG59XG5cbi5za2lsbC1pdGVtOm50aC1vZi10eXBlKDUpIHtcbiAgZ3JpZC1hcmVhOiBhNTtcbn1cblxuLnNraWxsLWl0ZW06bnRoLW9mLXR5cGUoNikge1xuICBncmlkLWFyZWE6IGE2O1xufVxuXG4uc2tpbGwtaXRlbTpudGgtb2YtdHlwZSg3KSB7XG4gIGdyaWQtYXJlYTogYTc7XG59XG5cbi5za2lsbC1pdGVtOm50aC1vZi10eXBlKDgpIHtcbiAgZ3JpZC1hcmVhOiBhODtcbn1cblxuLnNraWxsLWl0ZW06bnRoLW9mLXR5cGUoOSkge1xuICBncmlkLWFyZWE6IGE5O1xufVxuXG4uYWJvdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlNWU1O1xuICBwYWRkaW5nLXRvcDogODBweDtcbiAgcGFkZGluZy1ib3R0b206IDYwcHg7XG59XG4uYWJvdXQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuYWJvdXQtY29udGFpbmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyNzFweDtcbiAgICBnYXA6IDEwMHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5hYm91dC1jb250YWluZXIge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDI3MXB4O1xuICAgIGdhcDogNDBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny44cHgpIGFuZCAobWluLXdpZHRoOiA1NzZweCkge1xuICAuYWJvdXQtY29udGFpbmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyMzZweDtcbiAgICBnYXA6IDIwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOHB4KSB7XG4gIC5hYm91dC1jb250YWluZXIge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdhcDogMjBweDtcbiAgfVxufVxuLmFib3V0LXRpdGxlIHtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICBjb2xvcjogIzJkMzY1MTtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkge1xuICAuYWJvdXQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny44cHgpIHtcbiAgLmFib3V0LXRpdGxlIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICB9XG59XG4uYWJvdXQtdGV4dCB7XG4gIG1hcmdpbi10b3A6IC01cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkge1xuICAuYWJvdXQtdGV4dCB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICB9XG59XG4uYWJvdXQtbGVmdCB7XG4gIGNvbG9yOiAjNjM3NTg4O1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS44cHgpIHtcbiAgLmFib3V0LWxlZnQge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuLmFib3V0LXJpZ2h0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBncmlkO1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbn1cbi5hYm91dC1yaWdodDo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW4tcmlnaHQ6IDEzMCU7XG4gIG1hcmdpbi10b3A6IDQ0JTtcbiAgd2lkdGg6IDJweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoOTksIDExNywgMTM2LCAwLjEpO1xufVxuLmFib3V0LWltYWdlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXgtaGVpZ2h0OiA0ODBweDtcbn1cblxuLmZvcm0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzNjUxO1xufVxuLmZvcm0tY29udGFpbmVyIHtcbiAgcGFkZGluZzogMzBweCAwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ2FwOiAyMHB4O1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny44cHgpIGFuZCAobWluLXdpZHRoOiA1NzZweCkge1xuICAuZm9ybS1jb250YWluZXIge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOHB4KSBhbmQgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmZvcm0tc2VjdGlvbjpudGgtb2YtdHlwZSgxKSB7XG4gICAgZ3JpZC1jb2x1bW46IDEvc3BhbiAyO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc1LjhweCkge1xuICAuZm9ybS1zZWN0aW9uOm50aC1vZi10eXBlKDEpIHtcbiAgICBncmlkLWNvbHVtbjogMS9zcGFuIDM7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOHB4KSB7XG4gIC5mb3JtLXNlY3Rpb246bnRoLW9mLXR5cGUoMikge1xuICAgIGdyaWQtY29sdW1uOiAxL3NwYW4gMztcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS44cHgpIHtcbiAgLmZvcm0tc2VjdGlvbjpudGgtb2YtdHlwZSgzKSB7XG4gICAgZ3JpZC1jb2x1bW46IDEvc3BhbiAzO1xuICB9XG59XG4uZm9ybS1jb250cm9sLCAuZm9ybS1idG4ge1xuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgcGFkZGluZzogMThweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbi1vdXQ7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNzA3MDcwO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMTVlbTtcbn1cbi5mb3JtLWNvbnRyb2wge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg0MzY1O1xufVxuLmZvcm0tY29udHJvbDpob3ZlciwgLmZvcm0tY29udHJvbDpmb2N1cyB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICM2Mzc1ODg7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y0YzcyO1xufVxuLmZvcm0tY29udHJvbDpmb2N1czo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xufVxuLmZvcm0tY29udHJvbDpob3Zlcjo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xufVxuLmZvcm0tYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNmNGM3MjtcbiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNzA3MDcwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uZm9ybS1idG46aG92ZXIsIC5mb3JtLWJ0bjpmb2N1cyB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlNWU1ZTU7XG4gIGNvbG9yOiAjZTVlNWU1O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDY2OTI2O1xufVxuXG4ucG9zdHMge1xuICBwYWRkaW5nOiAzMHB4O1xufVxuXG4ucG9zdHMtY29udGFpbmVyX190aXRsZSB7XG4gIGNvbG9yOiAjMmQzNjUxO1xuICBmb250LXNpemU6IDQwcHg7XG4gIGxldHRlci1zcGFjaW5nOiAwLjJyZW07XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wb3N0cy1jb250YWluZXJfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOHB4KSBhbmQgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLnBvc3RzLWNvbnRhaW5lcl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS44cHgpIHtcbiAgLnBvc3RzLWNvbnRhaW5lcl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLnBvc3RzLWhvbWUge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInAxIHAxIHAyIHAzXCIgXCJwNCBwNSBwNiBwNlwiO1xuICBnYXA6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjhweCkgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wb3N0cy1ob21lIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInAxIHAxIHAyXCIgXCJwMyBwNCBwNFwiIFwicDUgcDUgcDZcIjtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3LjhweCkgYW5kIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5wb3N0cy1ob21lIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInAxIHAyXCIgXCJwMyBwNFwiIFwicDUgcDZcIjtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOHB4KSB7XG4gIC5wb3N0cy1ob21lIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInAxXCIgXCJwMlwiIFwicDNcIiBcInA0XCIgXCJwNVwiIFwicDZcIjtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxufVxuXG4ucG9zdHMtaXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XG59XG4ucG9zdHMtaXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7XG59XG4ucG9zdHMtaXRlbTpob3ZlciAucG9zdHMtaXRlbV9faW1nIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KSB0cmFuc2xhdGVZKC02LjVweCk7XG59XG4ucG9zdHMtaXRlbTpob3ZlciAucG9zdHMtaXRlbV9fdGl0bGUge1xuICBjb2xvcjogIzQ0NTk2ZTtcbn1cblxuLnBvc3RzLWl0ZW1fX2xpbmsge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDMwMHB4IDFmcjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ucG9zdHMtaXRlbV9faW1nIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAyNzBweDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cyBlYXNlO1xufVxuXG4ucG9zdHMtaXRlbV9fY29udGVudCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xufVxuXG4ucG9zdHMtaXRlbV9fdGl0bGUge1xuICBjb2xvcjogIzYzNzU4ODtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS4zO1xuICBtYXJnaW46IDA7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMjVzIGVhc2U7XG59XG5cbi5wb3N0cy10ZXh0IHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgY29sb3I6ICM2Mzc1ODg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLnBvc3RzLWl0ZW06bnRoLW9mLXR5cGUoMSkge1xuICBncmlkLWFyZWE6IHAxO1xufVxuXG4ucG9zdHMtaXRlbTpudGgtb2YtdHlwZSgyKSB7XG4gIGdyaWQtYXJlYTogcDI7XG59XG5cbi5wb3N0cy1pdGVtOm50aC1vZi10eXBlKDMpIHtcbiAgZ3JpZC1hcmVhOiBwMztcbn1cblxuLnBvc3RzLWl0ZW06bnRoLW9mLXR5cGUoNCkge1xuICBncmlkLWFyZWE6IHA0O1xufVxuXG4ucG9zdHMtaXRlbTpudGgtb2YtdHlwZSg1KSB7XG4gIGdyaWQtYXJlYTogcDU7XG59XG5cbi5wb3N0cy1pdGVtOm50aC1vZi10eXBlKDYpIHtcbiAgZ3JpZC1hcmVhOiBwNjtcbn1cblxuLmZvb3RlciB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogNzBweCAyMHB4IDgwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDM2NTE7XG59XG4uZm9vdGVyLWljb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4uZm9vdGVyLWljb246OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDc1cHg7XG4gIGhlaWdodDogMnB4O1xuICBsZWZ0OiBjYWxjKDUwJSAtIDM3LjVweCk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoOTksIDExNywgMTM2LCAwLjUpO1xufVxuLmZvb3Rlci1sb2dvIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzYzNzU4ODtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4zZW07XG59XG4uZm9vdGVyLWxvZ29fX3NwYW4ge1xuICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uZm9vdGVyIC5mYWIge1xuICBwYWRkaW5nLXJpZ2h0OiA2cHg7XG4gIHBhZGRpbmctbGVmdDogNnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjVweDtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xufVxuLmZvb3RlciAuZmFiOmhvdmVyLCAuZm9vdGVyIC5mYWI6Zm9jdXMge1xuICBjb2xvcjogI2Q2NjkyNjtcbn0iLCJAdXNlIFwiLi4vcHJlc2V0c1wiIGFzICo7XG5cbi8qIHVsICovXG5AbWl4aW4gdWwtbWluIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICR1bCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB1bCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkdWwgLSAwLjIpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gdWwteGwge1xuICBAbWVkaWEgKG1heC13aWR0aDogJHVsIC0gMC4yKSBhbmQgKG1pbi13aWR0aDogJHhsKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHVsLWxnIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR1bCAtIDAuMikgYW5kIChtaW4td2lkdGg6ICRsZykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB1bC1tZCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkdWwgLSAwLjIpIGFuZCAobWluLXdpZHRoOiAkbWQpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gdWwtc20ge1xuICBAbWVkaWEgKG1heC13aWR0aDogJHVsIC0gMC4yKSBhbmQgKG1pbi13aWR0aDogJHNtKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHVsLXhzIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR1bCAtIDAuMikgYW5kIChtaW4td2lkdGg6ICR4cykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8qIHhsICovXG5AbWl4aW4geGwtbWluIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICR4bCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB4bCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkeGwgLSAwLjIpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4geGwtbGcge1xuICBAbWVkaWEgKG1heC13aWR0aDogJHhsIC0gMC4yKSBhbmQgKG1pbi13aWR0aDogJGxnKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHhsLW1kIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR4bCAtIDAuMikgYW5kIChtaW4td2lkdGg6ICRtZCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB4bC1zbSB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkeGwgLSAwLjIpIGFuZCAobWluLXdpZHRoOiAkc20pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4geGwteHMge1xuICBAbWVkaWEgKG1heC13aWR0aDogJHhsIC0gMC4yKSBhbmQgKG1pbi13aWR0aDogJHhzKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLyogbGcgKi9cbkBtaXhpbiBsZy1taW4ge1xuICBAbWVkaWEgKG1pbi13aWR0aDogJGxnKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGxnIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICRsZyAtIDAuMikge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBsZy1tZCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkbGcgLSAwLjIpIGFuZCAobWluLXdpZHRoOiAkbWQpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gbGctc20ge1xuICBAbWVkaWEgKG1heC13aWR0aDogJGxnIC0gMC4yKSBhbmQgKG1pbi13aWR0aDogJHNtKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGxnLXhzIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICRsZyAtIDAuMikgYW5kIChtaW4td2lkdGg6ICR4cykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8qIG1kICovXG5AbWl4aW4gbWQtbWluIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRtZCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBtZCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQgLSAwLjIpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gbWQtc20ge1xuICBAbWVkaWEgKG1heC13aWR0aDogJG1kIC0gMC4yKSBhbmQgKG1pbi13aWR0aDogJHNtKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIG1kLXhzIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZCAtIDAuMikgYW5kIChtaW4td2lkdGg6ICR4cykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBtZC14eCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkbWQgLSAwLjIpIGFuZCAobWluLXdpZHRoOiAkeHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vKiBzbSAqL1xuQG1peGluIHNtLW1pbiB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkc20pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gc20ge1xuICBAbWVkaWEgKG1heC13aWR0aDogJHNtIC0gMC4yKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHNtLXhzIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICRzbSAtIDAuMikgYW5kIChtaW4td2lkdGg6ICR4cykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8qIHhzICovXG5AbWl4aW4geHMtbWluIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICR4cykge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB4cyB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkeHMgLSAwLjIpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vKiB4eCAqL1xuQG1peGluIHh4LW1pbiB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkeHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIHh4IHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR4eCAtIDAuMikge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4iLCJAdXNlIFwiLi4vcHJlc2V0c1wiIGFzICo7XHJcbkB1c2UgXCJtaXhpbnNcIiBhcyAqO1xyXG5AdXNlIFwibWl4aW5zLW1lZGlhXCIgYXMgKjtcclxuXHJcbiVjb250YWluZXIge1xyXG4gICBtYXgtd2lkdGg6ICR1bDtcclxuICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgIHBhZGRpbmctbGVmdDogJGdhcDtcclxuICAgcGFkZGluZy1yaWdodDogJGdhcDtcclxufVxyXG4lc2VjdGlvbiB7XHJcbiAgIEBpbmNsdWRlIGxnLW1pbiB7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAkZ2FwLXg1O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogJGdhcC14NTtcclxuICAgfVxyXG4gICBAaW5jbHVkZSBsZy1tZCB7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAkZ2FwLXg0O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogJGdhcC14NDtcclxuICAgfVxyXG4gICBAaW5jbHVkZSBtZCB7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAkZ2FwLXgzO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogJGdhcC14MztcclxuICAgfVxyXG5cclxuICAgaDIge1xyXG4gICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICB9XHJcbn1cclxuIiwiQHVzZSAnc2FzczptYXRoJztcblxuJGZvbnQtaGVhZGVyOiBcIlJvYm90byBTbGFiXCIsIHNlcmlmO1xuJGZvbnQtbWFpbjogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiRmb250LXNpemU6IDE2cHg7XG5cbiR1bDogMTM0MHB4O1xuJHhsOiAxMjAwcHg7XG4kbGc6IDk5MnB4O1xuJG1kOiA3NjhweDtcbiRzbTogNTc2cHg7XG5cbiRnYXA6IDIwcHg7XG4kZ2FwLXNtOiBtYXRoLmRpdigkZ2FwLCAyKTtcbiRnYXAtbGc6ICRnYXAgKiAxLjU7XG4kZ2FwLXgyOiAkZ2FwICogMjtcbiRnYXAteDI6ICRnYXAgKiAyO1xuJGdhcC14MzogJGdhcCAqIDM7XG4kZ2FwLXg0OiAkZ2FwICogNDtcbiRnYXAteDU6ICRnYXAgKiA1O1xuIiwiQHVzZSBcIi4uL3ByZXNldHNcIiBhcyAqO1xyXG5AdXNlIFwiLi4vbWl4aW5zXCIgYXMgKjtcclxuXHJcbiosXHJcbio6OmJlZm9yZSxcclxuOjphZnRlciB7XHJcbiAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuaHRtbCB7XHJcbiAgIGZvbnQtZmFtaWx5OiAkZm9udC1tYWluO1xyXG4gICBmb250LXNpemU6ICRmb250LXNpemU7XHJcbiAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xyXG59XHJcbmgxIHtcclxuICAgbGV0dGVyLXNwYWNpbmc6IDAuMDhlbTtcclxuICAgY29sb3I6ICRjb2xvci1saWdodDtcclxuICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgZm9udC1mYW1pbHk6ICRmb250LWhlYWRlcjtcclxuICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICBsaW5lLWhlaWdodDogMS4yO1xyXG5cclxuICAgQGluY2x1ZGUgbGctbWluIHtcclxuICAgICAgZm9udC1zaXplOiAzLjc1cmVtO1xyXG4gICB9XHJcbiAgIEBpbmNsdWRlIGxnLW1kIHtcclxuICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgIH1cclxuICAgQGluY2x1ZGUgbWQge1xyXG4gICAgICBmb250LXNpemU6IDEuODc1cmVtO1xyXG4gICB9XHJcbn1cclxuYSB7XHJcbiAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgY29sb3I6ICRjb2xvci1saWdodDtcclxufVxyXG4iLCIkY29sb3ItcHJpbWFyeTogIzJkMzY1MTtcbiRjb2xvci1hY2NlbnQ6ICNkNjY5MjY7XG4kY29sb3ItaGlnaGxpZ2h0OiAjZDUzZDI3O1xuJGNvbG9yLWdyYXk6ICM2Mzc1ODg7XG4kY29sb3ItZ3JheS1saWdodDogI2U1ZTVlNTtcbiRjb2xvci1ncmF5LWRhcms6ICM0NDU5NmU7XG4kY29sb3ItbGlnaHQ6ICNmZmZmZmY7XG4iLCJAdXNlIFwiLi4vcHJlc2V0c1wiIGFzICo7XHJcbkB1c2UgXCIuLi9taXhpbnNcIiBhcyAqO1xyXG5cclxuLmJ0biB7XHJcbiAgIHdpZHRoOiAyNTBweDtcclxuICAgZGlzcGxheTogZmxleDtcclxuICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIHBhZGRpbmctbGVmdDogMWVtO1xyXG4gICBwYWRkaW5nLXJpZ2h0OiAxZW07XHJcbiAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcclxuICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjVzO1xyXG4gICBjb2xvcjogJGNvbG9yLWxpZ2h0O1xyXG4gICBAaW5jbHVkZSBsZy1taW4ge1xyXG4gICAgICBmb250LXNpemU6IDEuMTI1cmVtO1xyXG4gICB9XHJcbiAgICYtLWxpZ2h0IHtcclxuICAgICAgQGluY2x1ZGUgbGctbWluIHtcclxuICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICAgIH1cclxuICAgICAgQGluY2x1ZGUgbGctbWQge1xyXG4gICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBsZyB7XHJcbiAgICAgICAgIHdpZHRoOiAxNzBweDtcclxuICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICB9XHJcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvci1saWdodDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKCRjb2xvci1saWdodCwgMC4xKTsgLyojZmZmZmZmKi9cclxuICAgfVxyXG4gICAmLS1wcmltYXJ5IHtcclxuICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICBAaW5jbHVkZSBzbS1taW4ge1xyXG4gICAgICAgICB3aWR0aDogMzUwcHg7XHJcbiAgICAgIH1cclxuICAgICAgQGluY2x1ZGUgc20ge1xyXG4gICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoJGNvbG9yLXByaW1hcnksIDAuOCk7IC8qIzJkMzY1MTsqL1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3ItcHJpbWFyeTtcclxuICAgfVxyXG5cclxuICAgJjpob3ZlcixcclxuICAgJjpmb2N1cyB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1hY2NlbnQ7XHJcbiAgIH1cclxufVxyXG4iLCJAdXNlIFwiLi4vLi4vcHJlc2V0c1wiIGFzICo7XHJcbkB1c2UgXCIuLi8uLi9taXhpbnNcIiBhcyAqO1xyXG5cclxuLmhlYWRlciB7XHJcbiAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcHJpbWFyeTtcclxuICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2ltZy1oZWFkZXIucG5nXCIpO1xyXG4gICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xyXG4gICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIHBhZGRpbmc6IDE1MHB4IDA7XHJcbiAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4iLCJAdXNlIFwiLi4vLi4vcHJlc2V0c1wiIGFzICo7XHJcbkB1c2UgXCIuLi8uLi9taXhpbnNcIiBhcyAqO1xyXG5cclxuLmhlYWRlci1vdmVybGF5IHtcclxuICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICB0b3A6IDA7XHJcbiAgIHJpZ2h0OiAwO1xyXG4gICBib3R0b206IDA7XHJcbiAgIGxlZnQ6IDA7XHJcblxyXG4gICBvcGFjaXR5OiAwLjg7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG59XHJcbiIsIkB1c2UgXCIuLi8uLi9wcmVzZXRzXCIgYXMgKjtcclxuQHVzZSBcIi4uLy4uL21peGluc1wiIGFzICo7XHJcblxyXG4uaGVhZGVyLW1lbnUge1xyXG4gICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgIHotaW5kZXg6IDI7XHJcbiAgIHRvcDogMDtcclxuICAgbGVmdDogMDtcclxuICAgcmlnaHQ6IDA7XHJcbiAgIEBpbmNsdWRlIG1kIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3ItZ3JheS1kYXJrLCAwLjI1KTtcclxuICAgICAgQGluY2x1ZGUgYm94LXNoYWRvdztcclxuICAgfVxyXG4gICAmX19jb250YWluZXIge1xyXG4gICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gMWZyO1xyXG4gICAgICBnYXA6ICRnYXA7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgICBAZXh0ZW5kICVjb250YWluZXI7XHJcbiAgIH1cclxufVxyXG4iLCJAdXNlIFwiLi4vLi4vcHJlc2V0c1wiIGFzICo7XHJcbkB1c2UgXCIuLi8uLi9taXhpbnNcIiBhcyAqO1xyXG5cclxuLmhlYWRlci1sb2dvIHtcclxuICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgIGxldHRlci1zcGFjaW5nOiAwLjIyZW07XHJcbiAgICZfX2FjY2VudCB7XHJcbiAgICAgIGJvcmRlcjogM3B4IHNvbGlkICRjb2xvci1oaWdobGlnaHQ7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgcGFkZGluZzogMTRweCAxcHggMTNweCA1cHg7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogNHB4O1xyXG4gICB9XHJcbiAgICZfX2xpbmsge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcGFkZGluZzogJGdhcCAkZ2FwICRnYXAgMDtcclxuICAgfVxyXG59XHJcbiIsIkB1c2UgXCIuLi8uLi9wcmVzZXRzXCIgYXMgKjtcclxuQHVzZSBcIi4uLy4uL21peGluc1wiIGFzICo7XHJcblxyXG4uaGVhZGVyLW5hdmJhciB7XHJcbiAgIEBpbmNsdWRlIG1kIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgfVxyXG4gICAmX19idG4ge1xyXG4gICAgICB3aWR0aDogMzBweDtcclxuICAgICAgaGVpZ2h0OiAyMi41cHg7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgbWFyZ2luOiAkZ2FwIDA7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICBAaW5jbHVkZSBtZC1taW4ge1xyXG4gICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXJvdyB7XHJcbiAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgIGhlaWdodDogM3B4O1xyXG4gICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3ItbGlnaHQ7XHJcbiAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICAgICB0cmFuc2l0aW9uOiAwLjI1cyBlYXNlLWluLW91dDtcclxuXHJcbiAgICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwIDNweCAzcHggMDtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4IDAgMCAzcHg7XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICY6bnRoLWNoaWxkKDEpLFxyXG4gICAgICAgICAmOm50aC1jaGlsZCgyKSB7XHJcbiAgICAgICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmOm50aC1jaGlsZCgzKSxcclxuICAgICAgICAgJjpudGgtY2hpbGQoNCkge1xyXG4gICAgICAgICAgICB0b3A6IDlweDtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJjpudGgtY2hpbGQoNSksXHJcbiAgICAgICAgICY6bnRoLWNoaWxkKDYpIHtcclxuICAgICAgICAgICAgdG9wOiAxOHB4O1xyXG4gICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYuYWN0aXZlIHNwYW4ge1xyXG4gICAgICAgICAmOm50aC1jaGlsZCgxKSxcclxuICAgICAgICAgJjpudGgtY2hpbGQoNikge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgIH1cclxuICAgICAgICAgJjpudGgtY2hpbGQoMiksXHJcbiAgICAgICAgICY6bnRoLWNoaWxkKDUpIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgICAgfVxyXG4gICAgICAgICAmOm50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDIuNXB4O1xyXG4gICAgICAgICAgICB0b3A6IDMuNXB4O1xyXG4gICAgICAgICB9XHJcbiAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgbGVmdDogY2FsYyg1MCUgLSAyLjVweCk7XHJcbiAgICAgICAgICAgIHRvcDogMy41cHg7XHJcbiAgICAgICAgIH1cclxuICAgICAgICAgJjpudGgtY2hpbGQoMykge1xyXG4gICAgICAgICAgICBsZWZ0OiAtNTAlO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICB9XHJcbiAgICAgICAgICY6bnRoLWNoaWxkKDQpIHtcclxuICAgICAgICAgICAgbGVmdDogMTAwJTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgfVxyXG4gICAgICAgICAmOm50aC1jaGlsZCg1KSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDIuNXB4O1xyXG4gICAgICAgICAgICB0b3A6IDE0LjVweDtcclxuICAgICAgICAgfVxyXG4gICAgICAgICAmOm50aC1jaGlsZCg2KSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gMi41cHgpO1xyXG4gICAgICAgICAgICB0b3A6IDE0LjVweDtcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgICZfX2xpc3Qge1xyXG4gICAgICBAaW5jbHVkZSB1bmxpc3QoMCAtMTBweCAwKTtcclxuICAgICAgQGluY2x1ZGUgbWQtbWluIHtcclxuICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAganVzdGlmeS1jb250ZW50OiBlbmQ7XHJcbiAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMmVtLCBtYXgtY29udGVudCkpO1xyXG4gICAgICAgICBnYXA6ICRnYXA7XHJcbiAgICAgICAgIEBpbmNsdWRlIHVubGlzdCgwIC0xMHB4IDApO1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIG1kIHtcclxuICAgICAgICAgQGluY2x1ZGUgdW5saXN0O1xyXG4gICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvci1ncmF5LWRhcmssIDAuOSk7XHJcbiAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgIHRvcDogMTAwJTtcclxuICAgICAgICAgcmlnaHQ6ICRnYXA7XHJcbiAgICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3c7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmX19pdGVtIHtcclxuICAgICAgQGluY2x1ZGUgbWQge1xyXG4gICAgICAgICBtYXJnaW46ICRnYXAgJGdhcC1zbTtcclxuICAgICAgfVxyXG4gICB9XHJcbiAgICZfX2xpbmsge1xyXG4gICAgICBAaW5jbHVkZSBtZC1taW4ge1xyXG4gICAgICAgICBwYWRkaW5nOiAkZ2FwICRnYXAtc207XHJcbiAgICAgIH1cclxuICAgICAgQGluY2x1ZGUgbWQge1xyXG4gICAgICAgICBwYWRkaW5nOiAkZ2FwLXNtICRnYXA7XHJcbiAgICAgIH1cclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuNXM7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcclxuICAgICAgJjpob3ZlcixcclxuICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3ItYWNjZW50O1xyXG4gICAgICB9XHJcbiAgIH1cclxufVxyXG4iLCJAdXNlIFwiLi4vcHJlc2V0c1wiIGFzICo7XG5cbkBtaXhpbiB0ZXh0LXNob3J0ZW5lciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG5AbWl4aW4gYmxvY2stc2hvcnRlbmVyKCRmejogMXJlbSwgJGxoOiAxLjUsICRoOiA3MHB4LCAkbDogMykge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcblxuICBoZWlnaHQ6ICRoO1xuXG4gIGZvbnQtc2l6ZTogJGZ6O1xuICBsaW5lLWhlaWdodDogJGZ6ICogJGxoO1xuXG4gIC13ZWJraXQtbGluZS1jbGFtcDogJGw7XG59XG5cbkBtaXhpbiBiZy1jb2xvcigkYTogMCwgJHJnYjogMCkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKCRyZ2IsICRyZ2IsICRyZ2IsICRhKTtcbn1cblxuQG1peGluIGJsb2NrLWhlYWRlciB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XG5cbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1kYXJrO1xufVxuXG5AbWl4aW4gdmlzdWFsbHktaGlkZGVuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuXG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG5cbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcblxuICBib3JkZXI6IDA7XG59XG5cbkBtaXhpbiB1bmxpc3QoJG06IDAsICRwOiAwKSB7XG4gIG1hcmdpbjogJG07XG4gIHBhZGRpbmc6ICRwO1xuXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbkBtaXhpbiBhYnMtcG9zaXRpb24oJHRvcDogMCwgJHJpZ2h0OiAwLCAkYm90dG9tOiAwLCAkbGVmdDogMCkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogJHRvcDtcbiAgcmlnaHQ6ICRyaWdodDtcbiAgYm90dG9tOiAkYm90dG9tO1xuICBsZWZ0OiAkbGVmdDtcbn1cblxuQG1peGluIGJveC1zaGFkb3cge1xuICBib3gtc2hhZG93OiAtM3B4IDNweCAyMHB4IC0xMHB4IGRhcmtlbigkY29sb3ItZ3JheS1kYXJrLCA0MCUpO1xufVxuIiwiQHVzZSBcIi4uLy4uL3ByZXNldHNcIiBhcyAqO1xyXG5AdXNlIFwiLi4vLi4vbWl4aW5zXCIgYXMgKjtcclxuXHJcbi5oZWFkZXItY29udGVudCB7XHJcbiAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgei1pbmRleDogMTtcclxuXHJcbiAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgIEBleHRlbmQgJWNvbnRhaW5lcjtcclxuICAgfVxyXG5cclxuICAgJl9fdGl0bGUge1xyXG4gICAgICBAaW5jbHVkZSBsZy1taW4ge1xyXG4gICAgICAgICBtYXJnaW46IDAgMCA1M3B4O1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIGxnLW1kIHtcclxuICAgICAgICAgbWFyZ2luOiAwIDAgNDNweDtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBtZCB7XHJcbiAgICAgICAgIG1hcmdpbjogMCAwIDMzcHg7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmX19hY3Rpb25zIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGdhcDogJGdhcDtcclxuICAgICAgQGluY2x1ZGUgc20ge1xyXG4gICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgIH1cclxufVxyXG4iLCJAdXNlIFwiLi4vLi4vLi4vcHJlc2V0c1wiIGFzICo7XHJcbkB1c2UgXCIuLi8uLi8uLi9taXhpbnNcIiBhcyAqO1xyXG5cclxuLnNraWxscyB7XHJcbiAgIEBpbmNsdWRlIHNtLW1pbiB7XHJcbiAgICAgIHBhZGRpbmc6ICRnYXAtc207XHJcbiAgIH1cclxuICAgQGluY2x1ZGUgc20ge1xyXG4gICAgICBwYWRkaW5nOiAkZ2FwO1xyXG4gICB9XHJcbiAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcblxyXG4gICAgICBAaW5jbHVkZSBsZy1taW4ge1xyXG4gICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImExIGExIGEyIGEzXCIgXCJhNCBhNSBhNSBhNlwiIFwiYTcgYTggYTkgYTZcIjtcclxuICAgICAgICAgZ2FwOiAkZ2FwLXNtO1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIGxnLW1kIHtcclxuICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJhMSBhMSBhMlwiIFwiYTMgYTQgYTRcIiBcImE1IGE1IGE2XCIgXCJhNyBhOCBhNlwiIFwiYTcgYTkgYTlcIjtcclxuICAgICAgICAgZ2FwOiAkZ2FwLXNtO1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIG1kLXNtIHtcclxuICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJhMSBhMlwiIFwiYTMgYTJcIiBcImE0IGE0XCIgXCJhNSBhNlwiIFwiYTUgYTdcIiBcImE4IGE5XCI7XHJcbiAgICAgICAgIGdhcDogJGdhcC1zbTtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBzbSB7XHJcbiAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiYTFcIiBcImEyXCIgXCJhM1wiIFwiYTRcIiBcImE1XCIgXCJhNlwiIFwiYTdcIiBcImE4XCIgXCJhOVwiO1xyXG4gICAgICAgICBnYXA6ICRnYXA7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmX19hY3Rpb25zIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIG1hcmdpbi10b3A6ICRnYXA7XHJcbiAgICAgIEBpbmNsdWRlIHNtLW1pbiB7XHJcbiAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgIH1cclxuICAgfVxyXG59XHJcbiIsIkB1c2UgXCIuLi8uLi8uLi9wcmVzZXRzXCIgYXMgKjtcclxuQHVzZSBcIi4uLy4uLy4uL21peGluc1wiIGFzICo7XHJcblxyXG4uc2tpbGwtaXRlbSB7XHJcbiAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgIEBtZWRpYSAobWluLWhlaWdodDogNjkxcHgpIHtcclxuICAgICAgbWluLWhlaWdodDogY2FsYygzMy4zMzMzdmggLSAxMy4zMzMzcHgpO1xyXG4gICB9XHJcbiAgIEBtZWRpYSAobWF4LWhlaWdodDogNjkwcHgpIHtcclxuICAgICAgbWluLWhlaWdodDogY2FsYygyMzBweCAtIDEzLjMzMzNweCk7XHJcbiAgIH1cclxuXHJcbiAgICY6aG92ZXIge1xyXG4gICAgICAuc2tpbGwtaXRlbV9fbGluayB7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3ItYWNjZW50O1xyXG4gICAgICB9XHJcbiAgICAgIC5za2lsbC1pdGVtX19pbWFnZSB7XHJcbiAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgICAgfVxyXG4gICAgICAuc2tpbGwtaXRlbV9fb3ZlcmxheSB7XHJcbiAgICAgICAgIG9wYWNpdHk6IDAuOTU7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmX190aXRsZSB7XHJcbiAgICAgIEBpbmNsdWRlIGFicy1wb3NpdGlvbjtcclxuICAgICAgei1pbmRleDogMTtcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XHJcbiAgICAgIEBpbmNsdWRlIG1kLW1pbiB7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBtZCB7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmX19saW5rIHtcclxuICAgICAgcGFkZGluZzogJGdhcDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuNXM7XHJcbiAgIH1cclxuICAgJl9faW1hZ2Uge1xyXG4gICAgICBAaW5jbHVkZSBhYnMtcG9zaXRpb247XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaW1nLWh0bWwucG5nXCIpO1xyXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzO1xyXG4gICB9XHJcbiAgICZfX292ZXJsYXkge1xyXG4gICAgICBAaW5jbHVkZSBhYnMtcG9zaXRpb247XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgICBvcGFjaXR5OiAwLjg7XHJcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cztcclxuICAgfVxyXG59XHJcbkBmb3IgJGkgZnJvbSAxIHRocm91Z2ggOSB7XHJcbiAgIC5za2lsbC1pdGVtOm50aC1vZi10eXBlKCN7JGl9KSB7XHJcbiAgICAgIGdyaWQtYXJlYTogYSN7JGl9O1xyXG4gICB9XHJcbn1cclxuIiwiQHVzZSBcIi4uLy4uL3ByZXNldHNcIiBhcyAqO1xyXG5AdXNlIFwiLi4vLi4vbWl4aW5zXCIgYXMgKjtcclxuXHJcbi5hYm91dCB7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1ncmF5LWxpZ2h0O1xyXG4gICBwYWRkaW5nLXRvcDogKCRnYXAteDQpO1xyXG4gICBwYWRkaW5nLWJvdHRvbTogJGdhcC14MztcclxuICAgJi1jb250YWluZXIge1xyXG4gICAgICBAZXh0ZW5kICVjb250YWluZXI7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgIEBpbmNsdWRlIGxnLW1pbiB7XHJcbiAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDI3MXB4O1xyXG4gICAgICAgICBnYXA6ICRnYXAteDU7XHJcbiAgICAgIH1cclxuICAgICAgQGluY2x1ZGUgbGctbWQge1xyXG4gICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyNzFweDtcclxuICAgICAgICAgZ2FwOiAkZ2FwLXgyO1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIG1kLXNtIHtcclxuICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMjM2cHg7XHJcbiAgICAgICAgIGdhcDogJGdhcDtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBzbSB7XHJcbiAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICBnYXA6ICRnYXA7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmLXRpdGxlIHtcclxuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xyXG4gICAgICBjb2xvcjogJGNvbG9yLXByaW1hcnk7XHJcbiAgICAgIGZvbnQtc2l6ZTogJGdhcC14MjtcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAkZ2FwO1xyXG5cclxuICAgICAgQGluY2x1ZGUgbGcge1xyXG4gICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgIH1cclxuICAgICAgQGluY2x1ZGUgbWQge1xyXG4gICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgICAgfVxyXG4gICB9XHJcbiAgICYtdGV4dCB7XHJcbiAgICAgIEBpbmNsdWRlIGxnIHtcclxuICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICB9XHJcbiAgICAgIG1hcmdpbi10b3A6IC01cHg7XHJcbiAgIH1cclxuICAgJi1sZWZ0IHtcclxuICAgICAgY29sb3I6ICRjb2xvci1ncmF5O1xyXG4gICAgICBmb250LXNpemU6IDEuMTI1cmVtO1xyXG4gICAgICBAaW5jbHVkZSBzbSB7XHJcbiAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgfVxyXG4gICB9XHJcbiAgICYtcmlnaHQge1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xyXG4gICB9XHJcbiAgICYtcmlnaHQ6OmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAxMzAlO1xyXG4gICAgICBtYXJnaW4tdG9wOiA0NCU7XHJcbiAgICAgIHdpZHRoOiAycHg7XHJcbiAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvci1ncmF5LCAwLjEpO1xyXG4gICB9XHJcbiAgICYtaW1hZ2Uge1xyXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1heC1oZWlnaHQ6IDQ4MHB4O1xyXG4gICB9XHJcbn1cclxuIiwiQHVzZSBcIi4uLy4uL3ByZXNldHNcIiBhcyAqO1xyXG5AdXNlIFwiLi4vLi4vbWl4aW5zXCIgYXMgKjtcclxuXHJcbi5mb3JtIHtcclxuICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXByaW1hcnk7XHJcbiAgICYtY29udGFpbmVyIHtcclxuICAgICAgcGFkZGluZzogY2FsYygkZ2FwLXgyIC0gMTBweCkgMHB4O1xyXG4gICAgICAvLyBtYXJnaW4tYm90dG9tOiAkZ2FwLXgyO1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiAkZ2FwO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6ICRnYXA7XHJcbiAgICAgIEBleHRlbmQgJWNvbnRhaW5lcjtcclxuICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgZ2FwOiAkZ2FwO1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgICBAaW5jbHVkZSBtZC1zbSB7XHJcbiAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmX19pdGVtIHtcclxuICAgfVxyXG4gICAmLXNlY3Rpb24ge1xyXG4gICAgICBAaW5jbHVkZSBtZC1zbSB7XHJcbiAgICAgICAgICY6bnRoLW9mLXR5cGUoMSkge1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIHNwYW4gMjtcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIHNtIHtcclxuICAgICAgICAgJjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxIC8gc3BhbiAzO1xyXG4gICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgQGluY2x1ZGUgc20ge1xyXG4gICAgICAgICAmOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyBzcGFuIDM7XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBzbSB7XHJcbiAgICAgICAgICY6bnRoLW9mLXR5cGUoMykge1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIHNwYW4gMztcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgIH1cclxuICAgJi1jb250cm9sLFxyXG4gICAmLWJ0biB7XHJcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICBwYWRkaW5nOiAxOHB4O1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgICAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM3MDcwNzA7XHJcbiAgICAgIGNvbG9yOiAkY29sb3ItbGlnaHQ7XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjE1ZW07XHJcbiAgIH1cclxuICAgJi1jb250cm9sIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkY29sb3ItcHJpbWFyeSwgNiUpO1xyXG4gICAgICAmOmhvdmVyLFxyXG4gICAgICAmOmZvY3VzIHtcclxuICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yLWdyYXk7XHJcbiAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkY29sb3ItbGlnaHQ7XHJcbiAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGNvbG9yLXByaW1hcnksIDEwJSk7XHJcbiAgICAgIH1cclxuICAgICAgJjpmb2N1czo6cGxhY2Vob2xkZXIge1xyXG4gICAgICAgICBjb2xvcjogcmdiYSgkY29sb3ItbGlnaHQsIDUwJSk7XHJcbiAgICAgIH1cclxuICAgICAgJjpob3Zlcjo6cGxhY2Vob2xkZXIge1xyXG4gICAgICAgICBjb2xvcjogcmdiYSgkY29sb3ItbGlnaHQsIDUwJSk7XHJcbiAgICAgIH1cclxuICAgfVxyXG4gICAmLWJ0biB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGNvbG9yLXByaW1hcnksIDEwJSk7XHJcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzcwNzA3MDtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAmOmhvdmVyLFxyXG4gICAgICAmOmZvY3VzIHtcclxuICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yLWdyYXktbGlnaHQ7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3ItZ3JheS1saWdodDtcclxuICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWFjY2VudDtcclxuICAgICAgfVxyXG4gICB9XHJcbn1cclxuIiwiQHVzZSBcIi4uLy4uL3ByZXNldHNcIiBhcyAqO1xyXG5AdXNlIFwiLi4vLi4vbWl4aW5zL1wiIGFzICo7XHJcblxyXG4ucG9zdHMge1xyXG4gICBwYWRkaW5nOiAzMHB4O1xyXG59XHJcbi5wb3N0cy1jb250YWluZXIge1xyXG4gICBAZXh0ZW5kICVjb250YWluZXI7XHJcbiAgICZfX3RpdGxlIHtcclxuICAgICAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgICBmb250LXNpemU6ICRnYXAteDI7XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjJyZW07XHJcbiAgICAgIG1hcmdpbi1ib3R0b206ICRnYXAteDM7XHJcbiAgICAgIEBpbmNsdWRlIGxnLW1kIHtcclxuICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIG1kLXNtIHtcclxuICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIHNtIHtcclxuICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIH1cclxuICAgfVxyXG59XHJcbi5wb3N0cy1ob21lIHtcclxuICAgZGlzcGxheTogZ3JpZDtcclxuICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJwMSBwMSBwMiBwM1wiIFwicDQgcDUgcDYgcDZcIjtcclxuICAgLy8gcGFkZGluZy1ib3R0b206ICRnYXA7XHJcbiAgIGdhcDogJGdhcDtcclxuICAgQGluY2x1ZGUgbGctbWQge1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInAxIHAxIHAyXCIgXCJwMyBwNCBwNFwiIFwicDUgcDUgcDZcIjtcclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcclxuICAgfVxyXG4gICBAaW5jbHVkZSBtZC1zbSB7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwicDEgcDJcIiBcInAzIHA0XCIgXCJwNSBwNlwiO1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgIH1cclxuICAgQGluY2x1ZGUgc20ge1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInAxXCIgXCJwMlwiIFwicDNcIiBcInA0XCIgXCJwNVwiIFwicDZcIjtcclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgIH1cclxufVxyXG4ucG9zdHMtaXRlbSB7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XHJcbiAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ3JheS1saWdodDtcclxuICAgICAgLnBvc3RzLWl0ZW1fX2ltZyB7XHJcbiAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSkgdHJhbnNsYXRlWSgtNi41cHgpO1xyXG4gICAgICB9XHJcbiAgICAgIC5wb3N0cy1pdGVtX190aXRsZSB7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3ItZ3JheS1kYXJrO1xyXG4gICAgICB9XHJcbiAgIH1cclxufVxyXG4ucG9zdHMtaXRlbV9fbGluayB7XHJcbiAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgIGdyaWQtdGVtcGxhdGUtcm93czogMzAwcHggMWZyO1xyXG4gICBoZWlnaHQ6IDEwMCU7XHJcbiAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuLnBvc3RzLWl0ZW1fX2ltZyB7XHJcbiAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIGhlaWdodDogMjcwcHg7XHJcbiAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXMgZWFzZTtcclxufVxyXG4ucG9zdHMtaXRlbV9fY29udGVudCB7XHJcbiAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgIHBhZGRpbmc6ICRnYXA7XHJcbiAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG59XHJcbi5wb3N0cy1pdGVtX190aXRsZSB7XHJcbiAgIGNvbG9yOiAkY29sb3ItZ3JheTtcclxuICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICBsaW5lLWhlaWdodDogMS4zO1xyXG4gICBtYXJnaW46IDA7XHJcbiAgIHRyYW5zaXRpb246IGNvbG9yIDAuMjVzIGVhc2U7XHJcbn1cclxuLnBvc3RzLXRleHQge1xyXG4gICBtYXJnaW4tdG9wOiAkZ2FwO1xyXG4gICBjb2xvcjogJGNvbG9yLWdyYXk7XHJcbiAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuLnBvc3RzLWl0ZW06bnRoLW9mLXR5cGUoMSkge1xyXG4gICBncmlkLWFyZWE6IHAxO1xyXG59XHJcbi5wb3N0cy1pdGVtOm50aC1vZi10eXBlKDIpIHtcclxuICAgZ3JpZC1hcmVhOiBwMjtcclxufVxyXG4ucG9zdHMtaXRlbTpudGgtb2YtdHlwZSgzKSB7XHJcbiAgIGdyaWQtYXJlYTogcDM7XHJcbn1cclxuLnBvc3RzLWl0ZW06bnRoLW9mLXR5cGUoNCkge1xyXG4gICBncmlkLWFyZWE6IHA0O1xyXG59XHJcbi5wb3N0cy1pdGVtOm50aC1vZi10eXBlKDUpIHtcclxuICAgZ3JpZC1hcmVhOiBwNTtcclxufVxyXG4ucG9zdHMtaXRlbTpudGgtb2YtdHlwZSg2KSB7XHJcbiAgIGdyaWQtYXJlYTogcDY7XHJcbn1cclxuIiwiQHVzZSBcIi4uLy4uL3ByZXNldHNcIiBhcyAqO1xyXG5AdXNlIFwiLi4vLi4vbWl4aW5zXCIgYXMgKjtcclxuXHJcbi5mb290ZXIge1xyXG4gICBtYXJnaW4tdG9wOiAoJGdhcCAqIDIpO1xyXG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIHBhZGRpbmc6ICgkZ2FwICogMy41KSAkZ2FwICgkZ2FwICogNCk7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAmLWNvbnRhaW5lciB7XHJcbiAgICAgIEBleHRlbmQgJWNvbnRhaW5lcjtcclxuICAgfVxyXG4gICAmLWljb24ge1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206ICRnYXA7XHJcbiAgIH1cclxuICAgJi1pY29uOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgbGVmdDogY2FsYyg1MCUgLSA3NXB4IC8gMik7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yLWdyYXksIDAuNSk7XHJcbiAgIH1cclxuXHJcbiAgICYtbG9nbyB7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgY29sb3I6ICRjb2xvci1ncmF5O1xyXG4gICAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjNlbTtcclxuICAgICAgJl9fc3BhbiB7XHJcbiAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3ItbGlnaHQ7XHJcbiAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIC5mYWIge1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiA2cHg7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogNnB4O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygkZ2FwLXgyIC0gMTVweCk7XHJcbiAgICAgIGZvbnQtc2l6ZTogMi4yNXJlbTtcclxuICAgICAgJjpob3ZlcixcclxuICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3ItYWNjZW50O1xyXG4gICAgICB9XHJcbiAgIH1cclxufVxyXG4iXX0= */